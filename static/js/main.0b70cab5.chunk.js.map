{"version":3,"sources":["pages/home/components/HomeCard.js","pages/home/Home.js","pages/todoList/components/Todo.js","pages/todoList/components/TodoForm.js","pages/todoList/List.js","App.js","serviceWorker.js","index.js"],"names":["HomeCard","image","text","link","style","margin","to","src","alt","width","height","textAlign","Home","justify","Todo","todo","index","completeTodo","removeTodo","textDecoration","isCompleted","className","onClick","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","List","todos","setTodos","newTodos","splice","map","key","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oTAsBeA,EAnBE,SAAC,GAIX,IAAD,IAHJC,aAGI,MAHI,4HAGJ,MAFJC,YAEI,MAFG,OAEH,MADJC,YACI,MADG,IACH,EACJ,OACE,yBAAKC,MAAO,CAAEC,OAAQ,SACpB,6BACE,kBAAC,IAAD,CAAMC,GAAIH,GACR,yBAAKI,IAAKN,EAAOO,IAAI,aAAaC,MAAM,QAAQC,OAAO,YAG3D,yBAAKN,MAAO,CAAEO,UAAW,WACvB,kBAAC,IAAD,CAAML,GAAIH,GAAOD,MCWVU,EAvBF,WACX,OACE,kBAAC,IAAD,CAAKC,QAAQ,UACX,kBAAC,EAAD,CACEZ,MAAM,iIACNC,KAAK,YACLC,KAAK,cAEP,kBAAC,EAAD,CACEF,MAAM,iIACNC,KAAK,kBACLC,KAAK,oBAEP,kBAAC,EAAD,CACEF,MAAM,6XACNC,KAAK,oBACLC,KAAK,qBAEP,kBAAC,EAAD,Q,gBCLSW,G,MAfF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACzC,OACE,yBACEd,MAAO,CAAEe,eAAgBJ,EAAKK,YAAc,eAAiB,IAC7DC,UAAU,kBAETN,EAAKb,KACN,6BACE,4BAAQoB,QAAS,kBAAML,EAAaD,KAApC,YACA,4BAAQM,QAAS,kBAAMJ,EAAWF,KAAlC,SCcOO,EAvBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACNC,mBAAS,IADH,mBACzBC,EADyB,KAClBC,EADkB,KAUhC,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,OAKP,2BACEI,KAAK,OACLV,UAAU,kBACVK,MAAOA,EACPM,YAAY,cACZC,SAAU,SAACJ,GAAD,OAAOF,EAASE,EAAEK,OAAOR,YCqC5BS,EAnDF,WAAO,IAAD,EACSV,mBAAS,CACjC,CACEvB,KAAM,oBACNkB,aAAa,GAEf,CACElB,KAAM,wBACNkB,aAAa,GAEf,CACElB,KAAM,6BACNkB,aAAa,KAZA,mBACVgB,EADU,KACHC,EADG,KAqBXpB,EAAe,SAACD,GACpB,IAAMsB,EAAQ,YAAOF,GACrBE,EAAStB,GAAOI,aAAekB,EAAStB,GAAOI,YAC/CiB,EAASC,IAGLpB,EAAa,SAACF,GAClB,IAAMsB,EAAQ,YAAOF,GACrBE,EAASC,OAAOvB,EAAO,GACvBqB,EAASC,IAGX,OACE,yBAAKjB,UAAU,iBACb,yBAAKA,UAAU,aACZe,EAAMI,KAAI,SAACzB,EAAMC,GAAP,OACT,kBAAC,EAAD,CACEyB,IAAKzB,EACLA,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,OAGhB,kBAAC,EAAD,CAAUM,QA7BA,SAACtB,GACf,IAAMoC,EAAQ,sBAAOF,GAAP,CAAc,CAAElC,UAC9BmC,EAASC,SCMEI,EArBH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,OAQF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,UCVUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0b70cab5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst HomeCard = ({\n  image = \"https://media3.giphy.com/media/pQyBc7MwzjW00/giphy.gif?cid=ecf05e47euf1srvgam0j8y7y1t0h99mmhbmn6707x1r6s8y9&rid=giphy.gif\",\n  text = \"????\",\n  link = \"#\",\n}) => {\n  return (\n    <div style={{ margin: \"1rem\" }}>\n      <div>\n        <Link to={link}>\n          <img src={image} alt=\"To do List\" width=\"200px\" height=\"200px\" />\n        </Link>\n      </div>\n      <div style={{ textAlign: \"center\" }}>\n        <Link to={link}>{text}</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeCard;\n","import React from \"react\";\nimport { Row } from \"antd\";\nimport HomeCard from \"./components/HomeCard\";\n\nconst Home = () => {\n  return (\n    <Row justify=\"center\">\n      <HomeCard\n        image=\"https://media4.giphy.com/media/xTiTnuhyBF54B852nK/giphy.gif?cid=ecf05e47ntl44c0uu1x01b2pf6wd37hal2i9dlafx56g9ig4&rid=giphy.gif\"\n        text=\"Todo List\"\n        link=\"/todolist\"\n      />\n      <HomeCard\n        image=\"https://media4.giphy.com/media/xTkcExjXuOJj69fVv2/giphy.gif?cid=ecf05e47jtdhyku1hd0fgrxe5tqep57bbd9szspdxqbwy8m4&rid=giphy.gif\"\n        text=\"Expense Tracker\"\n        link=\"/expensetracker\"\n      />\n      <HomeCard\n        image=\"https://i3.cpcache.com/merchandise_zoom/632_550x550_Front_Color-White.jpg?region={%22name%22:%22FrontCenter%22,%22width%22:3.25,%22height%22:3.25,%22alignment%22:%22MiddleCenter%22,%22orientation%22:0,%22dpi%22:200,%22crop_x%22:0,%22crop_y%22:0,%22crop_h%22:600,%22crop_w%22:600,%22scale%22:0,%22template%22:{%22id%22:82437181,%22params%22:{}}}&Size=3x3&AttributeValue=NA&c=True\"\n        text=\"Breaking Bad Cast\"\n        link=\"/breakingbadcast\"\n      />\n      <HomeCard />\n    </Row>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Todo = ({ todo, index, completeTodo, removeTodo }) => {\n  return (\n    <div\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n      className=\"todo-list-todo\"\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}>Complete</button>\n        <button onClick={() => removeTodo(index)}>x</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\nconst TodoForm = ({ addTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"todo-list-input\"\n        value={value}\n        placeholder=\"Add Todo...\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport \"./todoList.css\";\nimport Todo from \"./components/Todo\";\nimport TodoForm from \"./components/TodoForm\";\n\nconst List = () => {\n  const [todos, setTodos] = useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false,\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false,\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false,\n    },\n  ]);\n\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"todo-list-app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home/Home\";\nimport TodoList from \"./pages/todoList/List\";\n// import ExpenseTrackerList from \"./pages/expenseTracker/List\";\n// import BreakingBadCast from \"./pages/breakingBadCast/List\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/todolist\">\n          <TodoList />\n        </Route>\n        {/* <Route exact path=\"/expensetracker\">\n          <ExpenseTrackerList />\n        </Route> */}\n        {/* <Route exact path=\"/breakingbadcast\">\n          <BreakingBadCast />\n        </Route> */}\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}